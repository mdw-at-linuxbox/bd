---
# This playbook contains common plays that will be run on all nodes.

- name: yum-utils for epel
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - yum-utils

- name: yum-utils for epel
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
  register: epel_installed

- name: import epel key
  command: rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
  when: epel_installed.changed

- name: enable epel
  command: yum-config-manager --enable epel/x86_64
  when: epel_installed.changed

- name: install required packages
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - git
    - gcc
    - unzip
    - patch

- name: install some more helpful packages
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - python2-boto3
    - awscli
  tags: helpful

- name: install helpful debugging stuff
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  with_items:
    - mlocate
    - strace
    - net-tools
    - lsof
    - gdb
    - rcs
  tags: debug

- name: stop firewalld
  service:
    name: firewalld
    enabled: no
    state: stopped

- name: Install java
  action: >
    {{ ansible_pkg_mgr }} name=java-1.8.0-openjdk state=present
  tags: java

- name: check for no ntp package
  command: rpm -q chrony
  register: ntp_pkg_query
  ignore_errors: true
  always_run: true
  changed_when: false
  tags: chrony
  when: ansible_pkg_mgr == "yum" or ansible_pkg_mgr == "dnf"

- name: start chronyd if no ntp
  service:
    name: chronyd
    enabled: yes
    state: started
  when:
    - ntp_pkg_query.rc == 0
  tags: chrony

- name: Copy binaries to nodes
  get_url: url="{{ tarball_prefix }}{{ item }}" dest="{{ tarball_dest_path }}{{ item }}" force=no
  with_items:
    - "{{ hadoop_binary_name }}"
    - "{{ spark_binary_name }}"
    - "{{ presto_binary_name }}"
    - "{{ presto_cli_name }}"
    - "{{ prestoadmin_binary_name }}"
    - "{{ hive_binary_name }}"
    - "{{ maven_binary_name }}"
    - "{{ secor_binary_name }}"

- name: Copying Hive binaries to nodes
  get_url: url="{{ tarball_prefix }}{{ hive_binary_name }}" dest="{{ tarball_dest_path }}{{ hive_binary_name }}" force=no
  when:
  - head_group in group_names
