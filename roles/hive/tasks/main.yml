---
# This playbook installs and configures Apache Hive

- file:
    path: /hadoop/hive
    state: directory
    mode: 0755
  when:
  - head_group in group_names

- unarchive:
    src: "{{ tarball_dest_path }}{{ hive_binary_name }}"
    dest: /hadoop/hive
    remote_src: True
    extra_opts: "--strip-components=1"
    creates: /hadoop/hive/LICENSE
  when:
  - head_group in group_names

- name: Configure Hive profile
  template: src=profile.j2 dest=/etc/profile.d/hive.sh
  tags: hive

- name: Configure hive-site file
  template: src=hive-site.j2 dest=/hadoop/hive/conf/hive-site.xml
  tags: hive
  notify:
  - start metastore
  when:
  - head_group in group_names

- name: Link Hadoop libraries
  file: src=/hadoop/share/hadoop/tools/lib/{{ item }} dest=/hadoop/hive/lib/{{ item }} state=link
  with_items:
  - hadoop-aws-{{ hadoop_version }}.jar
  - aws-java-sdk-core-{{ aws_java_sdk_version }}.jar
  - aws-java-sdk-kms-{{ aws_java_sdk_version }}.jar
  - aws-java-sdk-s3-{{ aws_java_sdk_version }}.jar
  when:
  - head_group in group_names

- name: Install mariadb packages
  yum: name={{ item }} state=installed
  with_items:
  - mariadb-server
  - mysql-connector-java
  - MySQL-python
  when:
  - head_group in group_names

- file:
    src: /usr/share/java/mysql-connector-java.jar
    dest: /hadoop/hive/lib/mysql-connector-java.jar
    state: link
  when:
  - head_group in group_names

- name: Configure mariadb
  template: src=my.cnf.j2 dest=/etc/my.cnf
  notify:
  - restart mariadb
  when:
  - head_group in group_names

- name: Stat before touching
  stat: path={{ item }}
  register: mysqld_stat
  ignore_errors: true
  check_mode: no
  changed_when: false
  with_items:
  - /var/log/mysqld.log
  - /var/run/mysqld/mysqld.pid
  when:
  - head_group in group_names

- name: Create mariadb run directory
  file: path={{ item.path }} mode=0755 owner=mysql group=mysql state={{ item.state }}
  with_items:
  - { path: /var/run/mysqld, state: directory }
  when:
  - head_group in group_names

- name: Create mariadb log file
  file: path={{ item.path }} mode=0755 owner=mysql group=mysql state={{ item.state }}
  with_items:
  - { path: /var/log/mysqld.log, state: touch }
  when:
  - head_group in group_names and not mysqld_stat.results[0].stat.exists

- name: Create mariadb run pid
  file: path={{ item.path }} mode=0755 owner=mysql group=mysql state={{ item.state }}
  with_items:
  - { path: /var/run/mysqld/mysqld.pid, state: touch }
  when:
  - head_group in group_names and not mysqld_stat.results[1].stat.exists

- name: Disable selinux
  selinux: state=disabled
  when:
  - head_group in group_names

- name: Start mariadb service
  service: name=mariadb state=started enabled=yes
  when:
  - head_group in group_names

- name: Create hive database
  mysql_db: name={{ hive_metastore_database_name }} state=present
  when:
  - head_group in group_names

- name: Create hive mysql user and grants
  mysql_user: name={{ hive_metastore_mysql_user }} password={{ hive_metastore_mysql_password }} priv=*.*:ALL host="{{ ansible_fqdn }}" state=present
  notify:
  - init metastore
  - start metastore
  when:
  - head_group in group_names
